<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.macula.cloud.admin.mapper.SysRoleMapper">

    <resultMap id="resultVoMap" type="org.macula.cloud.admin.entity.vo.admin.RoleVO">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="parentId" column="parent_id"/>
        <result property="isExtends" column="is_extends"/>
        <result property="companyId" column="company_id"/>
        <result property="extendsFrom" column="extends_from"/>
        <result property="isAssignable" column="is_assignable"/>
        <result property="isResignable" column="is_resignable"/>
        <result property="isGroup" column="is_group"/>
        <result property="isExecutable" column="is_executable"/>
        <result property="isRuleRole" column="is_rule_role"/>
        <result property="ruleExpression" column="rule_expression"/>
        <result property="comments" column="comments"/>
        <result property="dataAuthority" column="data_authority"/>
        <result property="editable" column="editable"/>

        <collection property="permissions" ofType="org.macula.cloud.admin.entity.pojo.privilege.Function"
                    javaType="java.util.ArrayList">
            <result property="id" column="permission_id"/>
            <result property="name" column="permission_name"/>
        </collection>
        <collection property="menus" ofType="org.macula.cloud.admin.entity.pojo.privilege.Menu"
                    javaType="java.util.ArrayList">
            <result property="id" column="menu_id"/>
            <result property="name" column="menu_name"/>
            <result property="menuType" column="menu_type"/>
        </collection>
    </resultMap>


    <resultMap id="resultRoleMap" type="org.macula.cloud.admin.entity.pojo.privilege.Role">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="parentId" column="parent_id"/>
        <result property="isExtends" column="is_extends"/>
        <result property="companyId" column="company_id"/>
        <result property="extendsFrom" column="extends_from"/>
        <result property="isAssignable" column="is_assignable"/>
        <result property="isResignable" column="is_resignable"/>
        <result property="isGroup" column="is_group"/>
        <result property="isExecutable" column="is_executable"/>
        <result property="isRuleRole" column="is_rule_role"/>
        <result property="ruleExpression" column="rule_expression"/>
        <result property="comments" column="comments"/>
        <result property="dataAuthority" column="data_authority"/>
        <result property="parentListStr" column="parent_list_str"/>

        <collection property="permissionIds" ofType="java.lang.Long"
                    javaType="java.util.ArrayList">
            <result property="id" column="permission_id"/>
        </collection>
        <collection property="menuIds" ofType="java.lang.Long"
                    javaType="java.util.ArrayList">
            <result property="id" column="menu_id"/>
        </collection>
    </resultMap>


    <resultMap id="roleAuthorityMap" type="org.macula.cloud.admin.entity.vo.admin.FunctionAuthorityVO">
        <id property="roleId" column="role_id"/>

        <collection property="permissionIds" ofType="java.lang.Long" javaType="java.util.ArrayList">
            <result property="id" column="permission_id"/>
        </collection>

        <collection property="menuIds" ofType="java.lang.Long" javaType="java.util.ArrayList">
            <result property="id" column="menu_id"/>
        </collection>
    </resultMap>

    <select id="queryAllRoles" resultMap="resultVoMap">

        <choose>
            <when test="createBy != null">
                select r.*,
                m.id AS menu_id,
                m.name AS menu_name,
                m.menu_type AS menu_type,
                p.id AS permission_id,
                p.name AS permission_name
                from

                (
                select r.*,0 editable from sys_role r where r.create_by=#{createBy}
                union
                select r.*,1 editable from sys_role r, sys_user_role ur where r.id=ur.role_id and ur.user_id=#{createBy}
                union
                select r.*,1 editable from sys_role r where r.id in (select r.parent_id from sys_role r, sys_user_role
                ur where r.id=ur.role_id and ur.user_id=#{createBy})
                union
                select r.*,1 editable from sys_role r where r.id in (select r.parent_id from sys_role r where r.id in (
                select r.parent_id from sys_role r, sys_user_role ur where r.id=ur.role_id and ur.user_id=#{createBy}))
                union
                select r.*,1 editable from sys_role r where r.id in (select r.parent_id from sys_role r where r.id in
                (select r.parent_id from sys_role r where r.id in (
                select r.parent_id from sys_role r, sys_user_role ur where r.id=ur.role_id and ur.user_id=#{createBy})))
                ) r
                LEFT JOIN sys_role_menu rm ON r.id=rm.role_id
                LEFT JOIN sys_menu m ON m.id=rm.menu_id
                LEFT JOIN sys_role_permission rp ON rp.role_id=r.id
                LEFT JOIN sys_permission p ON p.id=rp.permission_id
                where 1= 1

                <if test="condition.companyId != null">
                    AND r.company_id = #{condition.companyId}
                </if>

                <if test="condition.name != null and condition.name != ''">
                    AND r.name LIKE CONCAT('%', #{condition.name},'%')
                </if>
            </when>
            <otherwise>
                SELECT r.*,
                m.id AS menu_id,
                m.name AS menu_name,
                m.menu_type AS menu_type,
                p.id AS permission_id,
                p.name AS permission_name
                FROM sys_role r
                LEFT JOIN sys_role_menu rm ON r.id=rm.role_id
                LEFT JOIN sys_menu m ON m.id=rm.menu_id
                LEFT JOIN sys_role_permission rp ON rp.role_id=r.id
                LEFT JOIN sys_permission p ON p.id=rp.permission_id
                where 1=1
                <if test="condition.companyId != null">
                    AND r.company_id = #{condition.companyId}
                </if>

                <if test="condition.name != null and condition.name != ''">
                    AND r.name LIKE CONCAT('%', #{condition.name},'%')
                </if>
            </otherwise>

        </choose>

        ORDER BY r.id ASC
    </select>

    <select id="queryRolesByCondition" resultMap="resultVoMap">
        SELECT
        sr.*
        FROM sys_role sr
        LEFT JOIN sys_role_permission srp ON srp.role_id = sr.id
        LEFT JOIN sys_permission sp ON sp.id = srp.permission_id
        WHERE 1=1

        <if test="condition.roleId != null and condition.roleId != ''">
            AND sr.id = #{condition.roleId}
        </if>

        <if test="condition.isGroup != null and condition.isGroup != ''">
            AND sr.is_group = #{condition.isGroup}
        </if>

        <if test="condition.isExtends != null and condition.isExtends != ''">
            AND sr.is_extends=#{condition.isExtends}
        </if>

        <if test="condition.companyId != null and condition.companyId != ''">
            AND sr.company_id = #{condition.companyId}
        </if>

        <if test="condition.createBy != null">
            AND sr.create_by = #{condition.createBy}
        </if>

    </select>

    <delete id="deleteRoleFunction">
        delete from sys_role_permission where permission_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteRoleMenu">
        delete from sys_role_menu where menu_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="queryByRoleId" resultMap="resultRoleMap">
        SELECT r.*,
        getRoleParentList(r.id, 0) AS parent_list_str,
        sm.id AS menu_id,
        sp.id AS permission_id
        FROM sys_role r
        LEFT JOIN sys_role_menu rm ON r.id=rm.role_id
        LEFT JOIN sys_menu sm ON sm.id=rm.menu_id
        LEFT JOIN sys_role_permission srp ON srp.role_id=r.id
        LEFT JOIN sys_permission sp ON sp.id=srp.permission_id
        WHERE r.id = #{roleId}
    </select>

    <select id="getRoleList" resultType="org.macula.cloud.admin.entity.pojo.privilege.Role">
        SELECT DISTINCT r.* FROM sys_role r

        <if test="condition.userId != 1">
            LEFT JOIN sys_user_role ur ON r.id=ur.role_id
            AND ur.user_id=#{condition.userId}
        </if>

        WHERE 1=1

        <if test="condition.companyId != null">
            AND r.company_id=#{condition.companyId}
        </if>

        <if test="condition.isGroup != null">
            AND r.is_group = #{condition.isGroup}
        </if>

        AND r.is_extends = 1
    </select>

    <insert id="addRole2User" parameterType="org.macula.cloud.admin.entity.pojo.admin.SysUser">
        insert into sys_user_role (
        user_id, role_id,
        create_by, create_time,
        update_by, update_time
        )
        values
        <foreach collection="user.roleIds" item="item" index="index" separator="," close=";">
            (
            #{user.id}, #{item},
            null, now(),
            null, now()
            )
        </foreach>
    </insert>

    <delete id="deleteUserAllRole">
        delete from sys_user_role where user_id IN
        <foreach collection="userIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="getRoleAuthority" resultType="org.macula.cloud.admin.entity.pojo.privilege.Role">
        SELECT
        r.id AS role_id,
        sm.id AS menu_id,
        sp.id AS permission_id
        FROM sys_role r
        LEFT JOIN sys_role_menu rm ON r.id=rm.role_id
        LEFT JOIN sys_menu sm ON sm.id=rm.menu_id
        LEFT JOIN sys_role_permission srp ON srp.role_id=r.id
        LEFT JOIN sys_permission sp ON sp.id=srp.permission_id
        WHERE r.id = #{id};
	</select>

    <select id="getUserDataAuthority" resultType="org.macula.cloud.admin.entity.vo.admin.UserDataAuthorityVO">
        SELECT u.company_id,department_id,u.id user_id,
        if(u.id=1,0,(if(min(r.data_authority) is null,2, min(r.data_authority)))) data_authority
        FROM sys_user u
        left join sys_user_role ur on ur.user_id = u.id
        left join sys_role r on r.id = ur.role_id
        where u.id = #{userId}
    </select>

</mapper>
